<style lang="less">
page {
  background-color: #efeff4;
  height: 100%;
}
.manage {
  height: 100%;
  background-color: #fff;
  &-header {
    height: 60rpx;
    width: 750rpx;
    background-color: #324db5;
    display: flex;
    justify-content: center;
    align-items: center;
    top: 0rpx;
    left: 0rpx;
    position: fixed;
    z-index: 9999;
    .left,
    .right {
      height: 48rpx;
      
      font-size: 30rpx;
      color: #99a6da;
    }
    .left {
      margin-right: 80rpx;
    }
    .right.white,
    .left.white {
      color: #fff;
      font-weight: bold;
      border-bottom: 4rpx solid #fff;
    }
  }
  &-content {
    margin-top: 60rpx;
    .noRecord {
      padding-top: 100rpx;
      text-align: center;
    }
    &-msg,
    &-feedback {
      padding: 0 26px;
      width: 750rpx;
      box-sizing: border-box;
      background-color: #fff;
      &-item {
        height: 120rpx;
        border-bottom: 1rpx solid #e5e5ea;
        display: flex;
        flex-direction: column;
        justify-content: center;
        color: #a0a0a0;
        .top {
          display: flex;
          justify-content: space-between;
          align-items: center;
          // height: 72rpx;
          // line-height: 72rpx;
          .left {
            margin-top: 10rpx;
            display: flex;
            font-size: 34rpx;
            line-height: 34rpx;
            justify-content: flex-start;
            .content {
              font-size: 30rpx;
              margin-left: 50rpx;
            }
          }
          .right {
            font-size: 20rpx;
            height: 72rpx;
            line-height: 72rpx;
            display: flex;
            align-items: center;
            align-items: flex-start;
            margin-top: 10rpx;
            .rightImg {
              width: 44rpx;
              height: 72rpx;
            }
          }
        }
      }
    }
    &-msg {
      padding: 0 26px;
      width: 750rpx;
      box-sizing: border-box;
      background-color: #fff;
      margin: 0 auto;
      &-item {
        position: relative;
        overflow: hidden;
        height: 120rpx;
        color: #a0a0a0;
        border-bottom: 1rpx solid #e5e5ea;
        .inner {
          position: absolute;
          top: 0;
        }
        .inner.txt {
          font-family: Monaco;
          height: 120rpx;
          box-sizing: border-box;
          z-index: 5;
          transition: left 0.2s ease-in-out;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
          display: flex;
          flex-direction: column;
          justify-content: center;
          width: 640rpx;
          .top {
            display: flex;
            justify-content: space-between;
            align-items: center;
            // height: 72rpx;
            // line-height: 72rpx;
            .left {
              margin-top: 10rpx;
              display: flex;
              font-size: 34rpx;
              line-height: 34rpx;
              justify-content: flex-start;
              .content {
                font-size: 30rpx;
                margin-left: 50rpx;
                
              }
            }
            .right {
              font-size: 20rpx;
              height: 72rpx;
              line-height: 72rpx;
              display: flex;
              align-items: center;
              align-items: flex-start;
              margin-top: 10rpx;
              .rightImg {
                width: 44rpx;
                height: 72rpx;
              }
            }
          }
        }
        .inner.del {
          font-family: Monaco;
          width: 180rpx;
          height: 118rpx;
          top: 1rpx;
          display: flex;
          justify-content: center;
          align-items: center;
          z-index: 6;
          right: 0rpx;
          color: #fff;
          background-color: red;
        }
      }
    }
    .manage-content-msg-item.blur,
    .manage-content-feedback-item.blur {
      color: #000;
    }
    .manage-content-feedback-btn{
      background-color:#324db5;
      color:white;
      font-size:30rpx;
      top:30rpx;
      width:150rpx;
      left:-200rpx !important;

    }
  }
}
</style>
<template>
  <view class="manage">
    <view class="manage-header">
      <view class="left {{slectedIndex==1?'white':''}}" @tap.stop="slectedMsg(1)">
        系统消息
      </view>
      <view class="right {{slectedIndex==2?'white':''}}" @tap.stop="slectedMsg(2)">
        用户反馈
      </view>
    </view>
    <view class="manage-content">
      <!-- 没有系统消息时，进行提示 -->
      <view>
        <view class="noRecord" wx:if="{{slectedIndex==1&&systemArr.length===0}}">数据加载中</view>
        <view class="manage-content-msg items" wx:if="{{slectedIndex==1&&systemArr.length>0}}">
          <!-- <scroll-view scroll-y style="height: 1000rpx;backgroundColor:#fff;"  bindscrolltolower="lower"  scroll-into-view="{{toView}}" scroll-top="{{scrollTop}}"> -->
          <view class="manage-content-msg-item  {{!item.isRead?'blur':''}}" bindtap="toDetail1({{item.id}},{{item.content}},{{item.title}},{{index}})"  wx:for-index="index" wx:for="{{systemArr}}">
            <view class="inner txt" bindtouchstart="touchS" bindtouchmove="touchM" bindtouchend="touchE" data-index="{{index}}" style="{{item.txtStyle}}">
              <view class="top">
                <view class="left">{{item.title}}
                  <view class="content">
                    {{item.content==null?'无':item.content}}
                  </view>
                </view>
                <view class="right">
                  <image src="../../assets/Path.png" class="rightImg"> </image>
                </view>
              </view>

            </view>
            <view class="inner del" style="{{(item.delStyle)}}" data-index="{{index}}" @tap.stop="delItem({{item.id}})">
              删除
            </view>
          </view>
          <!-- </scroll-view> -->
        </view>
      </view>
      <view>
        <view class="noRecord" wx:if="{{slectedIndex==2&&backArr.length===0}}">数据加载中</view>
        <view class="manage-content-feedback" wx:if="{{slectedIndex==2&&backArr.length>0}}">
 <!-- style="{{item.type==typeIdx?'':'display:none'}}" -->
        <button @tap.stop="up()" wx:if="{{typeIdx!=0}}" class="manage-content-feedback-btn">上一级</button>
          <view class="manage-content-feedback-item {{!item.isRead?'blur':''}}" wx:for="{{backArr}}" wx:if="{{item.type==typeIdx}}"   wx:for-index="bindex" @tap.stop="toDetail2({{item.id}},{{bindex}},{{item.typeDetail}},{{item.imei}},{{item.picPath}})">
            <view class="top">
              <view class="left">{{item.buggyNumber}}
                <view class="content">
                  {{item.content==null?'无':item.content}}
                </view>
              </view>
              <view class="right">
                <image src="../../assets/Path.png" class="rightImg"> </image>
              </view>
            </view> 
          </view>

          <view class="manage-content-feedback-item {{!item.isRead?'blur':''}}" wx:for-index="typeIndex" style="{{typeIdx!=0?'display:none':''}}"  wx:for="{{type}}" @tap.stop="changeType({{typeIndex}})"  >
          <view class="top">
              <view class="left">
                <view class="content">
                  {{item}} 
                </view>
              </view>
              <view class="right">
                <image src="../../assets/Path.png" class="rightImg"> </image>
              </view>
            </view>
          </view>
        

        </view>
      </view>

    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import api from '../../api/api'
import wxRequset from '../../utils/wxRequest'
import getStr from '../../utils/formateStr'
import {refresh} from '../../utils/refreshToken'
export default class Manage extends wepy.page {
  config = {
    navigationBarTitleText: '小赛手运营商'
  };
  data = {
    batteryId: '3552870000',
    // 被选中的是消息还是反馈，1是消息，2是反馈
    slectedIndex: 1,
    systemArr: [],
    pageNumber: 0,
    pageSize: 10000,
    operatorId: '',
    pageNumber1: 0,
    pageSize1: 10000,
    backArr: [],
    toView: 'red',
    scrollTop: 100,
    delBtnWidth: 180,
    startX: '',
    sysContent: 0,
    feedContent: 0,
    // 故障详情
    typeDetail: '',
    contentOne:[],
    contentTwo:[],
    type:['设备损坏','无法启动','支付退款','电池损坏','二维码','其他'],
    typeIdx:'0'
  };
  methods = {
    slectedMsg(index) {
      this.slectedIndex = index
      if (this.slectedIndex == 1) {
         this.data.contentOne.splice(0,this.data.contentOne.length);
        this.getSystem()
      } else if (this.slectedIndex == 2) {
          this.data.contentTwo.splice(0,this.data.contentTwo.length);
        this.getUserBack()
      }
      this.$apply()
      console.log('选择的编号', this.slectedIndex)
    },
    toDetail1(id, content, title,index) {
      let _this = this
      let fid = id
      let fcontent = content
      let ftitle = title
      // 调取接口去改变数据库中已读的字段
      // let id = wepy.getStorageSync('agentialId')
      let params = {
        agentId: wepy.getStorageSync('agentialId'),
        title: title,
        content: content,
        isRead: true
      }
      console.log(params)
      wxRequset.put(`/AGENT/tagentmessages/${id}`, params).then(res => {
        console.log('读取之后', res)
        if (res.code === '200') {
          wepy.navigateTo({
            url: `detail?id=${id}&content=${this.data.contentOne[index]}&title=${title}`
          })
        } else if (res.code === '401') {
          console.log('401嘛', res)
          refresh().then(res => {
            if (res === '1') {
              _this.toDetail1(fid, fcontent, ftitle)
            }
          })
        } else {
          wepy.showToast({
            title: res.msg, // 提示的内容,
            icon: 'none', // 图标,
            duration: 1000, // 延迟时间,
            mask: true // 显示透明蒙层，防止触摸穿透,
          })
        }
      })
    },
    toDetail2(id, index, typeDetail, imei, picPath) {
      console.log("dsada"+index)
      let _this = this
      let fid = id
      let fcontent = index
      let ftypeDetail = typeDetail
      let fimei = imei
      let fpicPath = picPath
      let params = {
        ids: [id],
        status: 1
      }
      console.log(this.data.contentTwo[index])
      
      api.readFeedback(params).then(res => {
        console.log('读取反馈', res)
        if (res.code === '200') {
          wepy.navigateTo({
            url: `detail?id=${id}&content=${this.data.contentTwo[index]}&typeDetail=${typeDetail}&imei=${imei}&picPath=${picPath}`
          })
        } else if (res.code === '401') {
          console.log('401嘛', res)
          refresh().then(res => {
            if (res === '1') {
              _this.toDetail2(fid, fcontent, ftypeDetail, fimei, fpicPath)
            }
          })
        } else {
          wepy.showToast({
            title: res.msg, // 提示的内容,
            icon: 'none', // 图标,
            duration: 1000, // 延迟时间,
            mask: true // 显示透明蒙层，防止触摸穿透,
          })
        }
      })
    },
    up(){
      this.typeIdx=0
      this.$apply()
    },
    changeType(e){
      
        this.typeIdx=e+1
       
        this.$apply()
        
        console.log(this.data.typeIdx)
    },
    touchS(e) {
      if (e.touches.length === 1) {
        // 设置触摸起始点水平方向位置
        this.startX = e.touches[0].clientX
      }
    },
    touchM(e) {
      if (e.touches.length === 1) {
        // 手指移动时水平方向位置
        var moveX = e.touches[0].clientX
        // 手指起始点位置与移动期间的差值
        var disX = this.startX - moveX
        var delBtnWidth = this.delBtnWidth
        var txtStyle = ''
        var delStyle = ''
        if (disX === 0 || disX < 0) {
          // 如果移动距离小于等于0，说明向右滑动，文本层位置不变
          txtStyle = 'left:0px'
          delStyle = 'right:-90px'
        } else if (disX > 0) {
          // 移动距离大于0，文本层left值等于手指移动距离
          txtStyle = 'left:-' + disX + 'px'
          delStyle = 'right:' + (disX - 90) + 'px'
          if (disX >= delBtnWidth) {
            // 控制手指移动距离最大值为删除按钮的宽度
            txtStyle = 'left:-' + delBtnWidth + 'px'
            delStyle = 'right:' + (delBtnWidth - 90) + 'px'
          }
        }
        // 获取手指触摸的是哪一项
        var index = e.currentTarget.dataset.index
        var systemArr = this.systemArr
        systemArr[index].txtStyle = txtStyle
        systemArr[index].delStyle = delStyle
        // 更新列表的状态
        this.systemArr = systemArr
      }
    },
    touchE(e) {
      if (e.changedTouches.length === 1) {
        // 手指移动结束后水平位置
        var endX = e.changedTouches[0].clientX
        // 触摸开始与结束，手指移动的距离
        var disX = this.startX - endX
        var delBtnWidth = this.delBtnWidth
        // 如果距离小于删除按钮的1/2，不显示删除按钮
        var txtStyle =
          disX > delBtnWidth / 2 ? 'left:-' + delBtnWidth + 'px' : 'left:0px'
        var delStyle =
          disX > delBtnWidth / 2
            ? 'right:' + (delBtnWidth - 90) + 'px'
            : 'right:-90px'
        // 获取手指触摸的是哪一项
        var index = e.currentTarget.dataset.index
        var systemArr = this.systemArr
        systemArr[index].txtStyle = txtStyle
        systemArr[index].delStyle = delStyle
        // 更新列表的状态
        this.systemArr = systemArr
      }
    },
    // 点击删除按钮事件
    delItem(id) {
      wxRequset.delete(`/AGENT/tagentmessages/${id}`).then(res => {
        console.log('删除', res)
        if (res.code === '200') {
          // 表示删除成功，再次请求信息接口
          this.getSystem()
        }
      })
      // // 获取列表中要删除项的下标
      // var index = e.currentTarget.dataset.index
      // var systemArr = this.systemArr
      // // 移除列表中下标为index的项
      // systemArr.splice(index, 1)
      // // 更新列表的状态
      // this.systemArr = systemArr
    }
  };
  // 获取元素自适应后的实际宽度
  getEleWidth(w) {
    var real = 0
    try {
      var res = wx.getSystemInfoSync().windowWidth
      var scale = 750 / 2 / (w / 2) // 以宽度750px设计稿做宽度的自适应
      real = Math.floor(res / scale)
      return real
    } catch (e) {
      return false
      // Do something when catch error
    }
  }
  initEleWidth() {
    var delBtnWidth = this.getEleWidth(this.delBtnWidth)
    this.delBtnWidth = delBtnWidth
  }
  // 触底加载更多
  // onReachBottom() {
  //   // 如果还有更多数据就加载
  //   // if (this.needLoadMore) {
  //   //   // 页面增加1
  //   //   this.pageNumber++
  //   //   // 加载数据
  //   //   this.getSystem()
  //   // }
  //   if (this.needLoadMore) {
  //     // 页面增加1
  //     this.pageNumber1++
  //     // 加载数据
  //     this.getUserBack()
  //   }
  // }
  // 获取系统消息
  getSystem() {
    let _this = this
    let params = {
      pageNumber: 1,
      pageSize: 30,
      agentId: wepy.getStorageSync('agentialId')
    }
    console.log(params)
    api.getSystemInfo(params).then(res => {
      console.log('系统消息', res)
      if (res.code === '200') {
        this.total = res.resultData.total
        this.systemArr = res.resultData.data
        this.systemArr.forEach(element => {
          element.txtStyle = ''
          element.delStyle = 'right:-90px;'
          this.data.contentOne.push(element.content)
          
          element.content = getStr.plusStr(element.content)
        })
        // this.systemArr = [...this.systemArr, ...res.resultData.data]
        console.log('系统消息', this.systemArr)
        this.$apply()
      } else if (res.code === '401') {
        console.log('401嘛', res)
        refresh().then(res => {
          if (res === '1') {
            _this.getSystem()
          }
        })
      }
    })
  }
  // 获取用户列表
  getUserBack() {
    let _this = this
    let params = {
      operatorId: this.operatorId,
      pageNumber: this.pageNumber1,
      pageSize: this.pageSize1
    }
    api.getUserBack(params).then(res => {
      console.log('用户列表', res)
      if (res.code === '200') {
        // this.needLoadMore = res.resultData.data.length < 10 ? false : true; // eslint-disable-line
        // this.backArr = [...this.backArr, ...res.resultData.data]
        this.backArr = res.resultData.data

        // let typeDetail = ''
        this.backArr.forEach(element => {
          let contentArr = []
          console.log(element)
          if (element.type.indexOf('1') !== -1) {
            contentArr.push('设备损坏')
          } else if (element.type.indexOf('2') !== -1) {
            contentArr.push('无法启动')
          } else if (element.type.indexOf('3') !== -1) {
            contentArr.push('支付退款')
          } else if (element.type.indexOf('4') !== -1) {
            contentArr.push('电池损坏')
          } else if (element.type.indexOf('5') !== -1) {
            contentArr.push('二维码')
          } else if (element.type.indexOf('6') !== -1) {
            contentArr.push('其他')
          }
          element.typeDetail = contentArr.toString()
          this.data.contentTwo.push(element.content)
          console.log(this.data.contentTwo)
          element.content = getStr.plusStr(element.content)
    

         
        })

        this.$apply()
      } else if (res.code === '401') {
        console.log('401嘛', res)
        refresh().then(res => {
          if (res === '1') {
            _this.getUserBack()
          }
        })
      }
    })
  }
  onShow() {
    console.log('选中的索引', this.slectedIndex)
    if (this.slectedIndex == 1) {
      this.getSystem()
    } else if (this.slectedIndex == 2) {
      this.getUserBack()
    }
  }
  onLoad() {
    this.operatorId = wepy.getStorageSync('principalId')
    this.initEleWidth()
  }
}
</script>
